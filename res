1 <UNKNOW,#> 
1 <ID,include> 
1 <LT,<> 
1 <ID,stdio> 
1 <DOT,.> 
1 <ID,h> 
1 <GT,>> 
2 <UNKNOW,#> 
2 <ID,include> 
2 <LT,<> 
2 <ID,malloc> 
2 <DOT,.> 
2 <ID,h> 
2 <GT,>> 
4 <CHAR,char> 
4 <ID,msg> 
4 <LBK,[> 
4 <CDOUBLE,200> 
4 <RBK,]> 
4 <LBK,[> 
4 <CDOUBLE,10> 
4 <RBK,]> 
4 <ASSIGN,=> 
4 <LBS,{> 
5 <CSTRING,"IMPORT"> 
5 <COM,,> 
6 <CSTRING,"VOID"> 
6 <COM,,> 
6 <CSTRING,"CHAR"> 
6 <COM,,> 
6 <CSTRING,"SHORT"> 
6 <COM,,> 
6 <CSTRING,"INT"> 
6 <COM,,> 
6 <CSTRING,"LONG"> 
6 <COM,,> 
6 <CSTRING,"FLOAT"> 
6 <COM,,> 
6 <CSTRING,"DOUBLE"> 
6 <COM,,> 
6 <CSTRING,"ENUM"> 
6 <COM,,> 
6 <CSTRING,"STRUCT"> 
6 <COM,,> 
7 <CSTRING,"UNSIGNED"> 
7 <COM,,> 
7 <CSTRING,"STATIC"> 
7 <COM,,> 
7 <CSTRING,"CONST"> 
7 <COM,,> 
7 <CSTRING,"EXTERN"> 
7 <COM,,> 
8 <CSTRING,"IF"> 
8 <COM,,> 
8 <CSTRING,"ELSE"> 
8 <COM,,> 
8 <CSTRING,"SWITCH"> 
8 <COM,,> 
8 <CSTRING,"CASE"> 
8 <COM,,> 
8 <CSTRING,"DEFAULT"> 
8 <COM,,> 
8 <CSTRING,"FOR"> 
8 <COM,,> 
8 <CSTRING,"DO"> 
8 <COM,,> 
8 <CSTRING,"WHILE"> 
8 <COM,,> 
8 <CSTRING,"CONTINUE"> 
8 <COM,,> 
8 <CSTRING,"BREAK"> 
8 <COM,,> 
8 <CSTRING,"RETURN"> 
8 <COM,,> 
9 <CSTRING,"PLUS"> 
9 <COM,,> 
9 <CSTRING,"SUB"> 
9 <COM,,> 
9 <CSTRING,"STAR"> 
9 <COM,,> 
9 <CSTRING,"DIV"> 
9 <COM,,> 
9 <CSTRING,"MOD"> 
9 <COM,,> 
10 <CSTRING,"SPLUS"> 
10 <COM,,> 
10 <CSTRING,"SSUB"> 
10 <COM,,> 
11 <CSTRING,"ASSIGN"> 
11 <COM,,> 
11 <CSTRING,"PAS"> 
11 <COM,,> 
11 <CSTRING,"SAS"> 
11 <COM,,> 
11 <CSTRING,"MAS"> 
11 <COM,,> 
11 <CSTRING,"DAS"> 
11 <COM,,> 
11 <CSTRING,"MODAS"> 
11 <COM,,> 
12 <CSTRING,"EQ"> 
12 <COM,,> 
12 <CSTRING,"NEQ"> 
12 <COM,,> 
12 <CSTRING,"GEQ"> 
12 <COM,,> 
12 <CSTRING,"LEQ"> 
12 <COM,,> 
12 <CSTRING,"GT"> 
12 <COM,,> 
12 <CSTRING,"LT"> 
12 <COM,,> 
13 <CSTRING,"AND"> 
13 <COM,,> 
13 <CSTRING,"OR"> 
13 <COM,,> 
13 <CSTRING,"NOT"> 
13 <COM,,> 
14 <CSTRING,"BAND"> 
14 <COM,,> 
14 <CSTRING,"BOR"> 
14 <COM,,> 
14 <CSTRING,"BRE"> 
14 <COM,,> 
14 <CSTRING,"XOR"> 
14 <COM,,> 
15 <CSTRING,"SL"> 
15 <COM,,> 
15 <CSTRING,"SR"> 
15 <COM,,> 
16 <CSTRING,"AAS"> 
16 <COM,,> 
16 <CSTRING,"OAS"> 
16 <COM,,> 
16 <CSTRING,"RAS"> 
16 <COM,,> 
16 <CSTRING,"XAS"> 
16 <COM,,> 
17 <CSTRING,"SLAS"> 
17 <COM,,> 
17 <CSTRING,"SRAS"> 
17 <COM,,> 
18 <CSTRING,"DOT"> 
18 <COM,,> 
18 <CSTRING,"ARROW"> 
18 <COM,,> 
20 <CSTRING,"LPB"> 
20 <COM,,> 
20 <CSTRING,"RPB"> 
20 <COM,,> 
20 <CSTRING,"LBK"> 
20 <COM,,> 
20 <CSTRING,"RBK"> 
20 <COM,,> 
20 <CSTRING,"LBS"> 
20 <COM,,> 
20 <CSTRING,"RBS"> 
20 <COM,,> 
21 <CSTRING,"COM"> 
21 <COM,,> 
21 <CSTRING,"COL"> 
21 <COM,,> 
21 <CSTRING,"SEM"> 
21 <COM,,> 
23 <CSTRING,"ID"> 
23 <COM,,> 
23 <CSTRING,"CINT"> 
23 <COM,,> 
23 <CSTRING,"CDOUBLE"> 
23 <COM,,> 
23 <CSTRING,"CSTRING"> 
23 <COM,,> 
23 <CSTRING,"CCHAR"> 
23 <COM,,> 
24 <CSTRING,"UNKNOW"> 
24 <COM,,> 
25 <CSTRING,"END"> 
26 <RBS,}> 
26 <SEM,;> 
29 <ENUM,enum> 
29 <ID,Token> 
29 <LBS,{> 
30 <ID,IMPORT> 
30 <COM,,> 
31 <ID,VOID> 
31 <COM,,> 
31 <ID,CHAR> 
31 <COM,,> 
31 <ID,SHORT> 
31 <COM,,> 
31 <ID,INT> 
31 <COM,,> 
31 <ID,LONG> 
31 <COM,,> 
31 <ID,FLOAT> 
31 <COM,,> 
31 <ID,DOUBLE> 
31 <COM,,> 
31 <ID,ENUM> 
31 <COM,,> 
31 <ID,STRUCT> 
31 <COM,,> 
32 <ID,UNSIGNED> 
32 <COM,,> 
32 <ID,STATIC> 
32 <COM,,> 
32 <ID,CONST> 
32 <COM,,> 
32 <ID,EXTERN> 
32 <COM,,> 
33 <ID,IF> 
33 <COM,,> 
33 <ID,ELSE> 
33 <COM,,> 
33 <ID,SWITCH> 
33 <COM,,> 
33 <ID,CASE> 
33 <COM,,> 
33 <ID,DEFAULT> 
33 <COM,,> 
33 <ID,FOR> 
33 <COM,,> 
33 <ID,DO> 
33 <COM,,> 
33 <ID,WHILE> 
33 <COM,,> 
33 <ID,CONTINUE> 
33 <COM,,> 
33 <ID,BREAK> 
33 <COM,,> 
33 <ID,RETURN> 
33 <COM,,> 
34 <ID,PLUS> 
34 <COM,,> 
34 <ID,SUB> 
34 <COM,,> 
34 <ID,STAR> 
34 <COM,,> 
34 <ID,DIV> 
34 <COM,,> 
34 <ID,MOD> 
34 <COM,,> 
35 <ID,SPLUS> 
35 <COM,,> 
35 <ID,SSUB> 
35 <COM,,> 
36 <ID,ASSIGN> 
36 <COM,,> 
36 <ID,PAS> 
36 <COM,,> 
36 <ID,SAS> 
36 <COM,,> 
36 <ID,MAS> 
36 <COM,,> 
36 <ID,DAS> 
36 <COM,,> 
36 <ID,MODAS> 
36 <COM,,> 
37 <ID,EQ> 
37 <COM,,> 
37 <ID,NEQ> 
37 <COM,,> 
37 <ID,GEQ> 
37 <COM,,> 
37 <ID,LEQ> 
37 <COM,,> 
37 <ID,GT> 
37 <COM,,> 
37 <ID,LT> 
37 <COM,,> 
38 <ID,AND> 
38 <COM,,> 
38 <ID,OR> 
38 <COM,,> 
38 <ID,NOT> 
38 <COM,,> 
39 <ID,BAND> 
39 <COM,,> 
39 <ID,BOR> 
39 <COM,,> 
39 <ID,BRE> 
39 <COM,,> 
39 <ID,XOR> 
39 <COM,,> 
40 <ID,SL> 
40 <COM,,> 
40 <ID,SR> 
40 <COM,,> 
41 <ID,AAS> 
41 <COM,,> 
41 <ID,OAS> 
41 <COM,,> 
41 <ID,RAS> 
41 <COM,,> 
41 <ID,XAS> 
41 <COM,,> 
42 <ID,SLAS> 
42 <COM,,> 
42 <ID,SRAS> 
42 <COM,,> 
43 <ID,DOT> 
43 <COM,,> 
43 <ID,ARROW> 
43 <COM,,> 
45 <ID,LPB> 
45 <COM,,> 
45 <ID,RPB> 
45 <COM,,> 
45 <ID,LBK> 
45 <COM,,> 
45 <ID,RBK> 
45 <COM,,> 
45 <ID,LBS> 
45 <COM,,> 
45 <ID,RBS> 
45 <COM,,> 
46 <ID,COM> 
46 <COM,,> 
46 <ID,COL> 
46 <COM,,> 
46 <ID,SEM> 
46 <COM,,> 
48 <ID,ID> 
48 <COM,,> 
48 <ID,CINT> 
48 <COM,,> 
48 <ID,CDOUBLE> 
48 <COM,,> 
48 <ID,CSTRING> 
48 <COM,,> 
48 <ID,CCHAR> 
48 <COM,,> 
49 <ID,UNKNOW> 
49 <COM,,> 
50 <ID,END> 
51 <RBS,}> 
51 <SEM,;> 
53 <VOID,void> 
53 <ID,debug> 
53 <LPB,(> 
53 <CHAR,char> 
53 <STAR,*> 
53 <ID,msg> 
53 <RPB,)> 
54 <LBS,{> 
55 <ID,puts> 
55 <LPB,(> 
55 <ID,msg> 
55 <RPB,)> 
55 <SEM,;> 
56 <RBS,}> 
58 <ID,typedef> 
58 <STRUCT,struct> 
59 <LBS,{> 
60 <CHAR,char> 
60 <ID,filename> 
60 <LBK,[> 
60 <CDOUBLE,4096> 
60 <RBK,]> 
60 <SEM,;> 
62 <CHAR,char> 
62 <STAR,*> 
62 <ID,buff_alpha> 
62 <SEM,;> 
63 <CHAR,char> 
63 <STAR,*> 
63 <ID,buff_beta> 
63 <SEM,;> 
65 <CHAR,char> 
65 <STAR,*> 
65 <ID,lex_begin> 
65 <SEM,;> 
66 <CHAR,char> 
66 <STAR,*> 
66 <ID,forward> 
66 <SEM,;> 
68 <INT,int> 
68 <ID,line> 
68 <SEM,;> 
69 <INT,int> 
69 <ID,chpos> 
69 <SEM,;> 
72 <CHAR,char> 
72 <ID,value> 
72 <LBK,[> 
72 <CDOUBLE,4096> 
72 <RBK,]> 
72 <SEM,;> 
73 <INT,int> 
73 <ID,buff_size> 
73 <SEM,;> 
74 <INT,int> 
74 <ID,finish> 
74 <SEM,;> 
76 <ID,FILE> 
76 <STAR,*> 
76 <ID,source_file> 
76 <SEM,;> 
77 <RBS,}> 
77 <ID,Lex> 
77 <SEM,;> 
78 <CONST,const> 
78 <CHAR,char> 
78 <ID,LEX_WHATCHER> 
78 <ASSIGN,=> 
78 <CDOUBLE,0> 
78 <SEM,;> 
84 <VOID,void> 
84 <ID,fill_buff> 
84 <LPB,(> 
84 <CHAR,char> 
84 <STAR,*> 
84 <ID,buff> 
84 <COM,,> 
84 <INT,int> 
84 <ID,size> 
84 <COM,,> 
84 <ID,FILE> 
84 <STAR,*> 
84 <ID,source> 
84 <RPB,)> 
85 <LBS,{> 
86 <INT,int> 
86 <ID,rc> 
86 <ASSIGN,=> 
86 <CDOUBLE,0> 
86 <SEM,;> 
87 <ID,rc> 
87 <ASSIGN,=> 
87 <ID,fread> 
87 <LPB,(> 
87 <ID,buff> 
87 <COM,,> 
87 <CDOUBLE,1> 
87 <COM,,> 
87 <ID,size> 
87 <SUB,-> 
87 <CDOUBLE,1> 
87 <COM,,> 
87 <ID,source> 
87 <RPB,)> 
87 <SEM,;> 
88 <ID,buff> 
88 <LBK,[> 
88 <ID,rc> 
88 <RBK,]> 
88 <ASSIGN,=> 
88 <ID,LEX_WHATCHER> 
88 <SEM,;> 
89 <RBS,}> 
94 <VOID,void> 
94 <ID,lex_init> 
94 <LPB,(> 
94 <ID,Lex> 
94 <STAR,*> 
94 <ID,lex> 
94 <COM,,> 
94 <CHAR,char> 
94 <STAR,*> 
94 <ID,filename> 
94 <RPB,)> 
95 <LBS,{> 
96 <INT,int> 
96 <ID,i> 
96 <ASSIGN,=> 
96 <CDOUBLE,0> 
96 <SEM,;> 
97 <FOR,for> 
97 <LPB,(> 
97 <SEM,;> 
97 <STAR,*> 
97 <LPB,(> 
97 <ID,filename> 
97 <PLUS,+> 
97 <ID,i> 
97 <RPB,)> 
97 <NEQ,!=> 
97 <CDOUBLE,0> 
97 <SEM,;> 
97 <ID,i> 
97 <SPLUS,++> 
97 <RPB,)> 
97 <LBS,{> 
98 <ID,lex> 
98 <ARROW,->> 
98 <ID,filename> 
98 <LBK,[> 
98 <ID,i> 
98 <RBK,]> 
98 <ASSIGN,=> 
98 <STAR,*> 
98 <LPB,(> 
98 <ID,filename> 
98 <PLUS,+> 
98 <ID,i> 
98 <RPB,)> 
98 <SEM,;> 
99 <RBS,}> 
100 <ID,lex> 
100 <ARROW,->> 
100 <ID,filename> 
100 <LBK,[> 
100 <ID,i> 
100 <RBK,]> 
100 <ASSIGN,=> 
100 <CDOUBLE,0> 
100 <SEM,;> 
101 <IF,if> 
101 <LPB,(> 
101 <ID,lex> 
101 <ARROW,->> 
101 <ID,buff_size> 
101 <LEQ,<=> 
101 <CDOUBLE,0> 
101 <RPB,)> 
101 <LBS,{> 
102 <ID,lex> 
102 <ARROW,->> 
102 <ID,buff_size> 
102 <ASSIGN,=> 
102 <CDOUBLE,1024> 
102 <SEM,;> 
103 <RBS,}> 
104 <ID,lex> 
104 <ARROW,->> 
104 <ID,buff_alpha> 
104 <ASSIGN,=> 
104 <ID,malloc> 
104 <LPB,(> 
104 <ID,lex> 
104 <ARROW,->> 
104 <ID,buff_size> 
104 <RPB,)> 
104 <SEM,;> 
105 <ID,lex> 
105 <ARROW,->> 
105 <ID,buff_beta> 
105 <ASSIGN,=> 
105 <ID,malloc> 
105 <LPB,(> 
105 <ID,lex> 
105 <ARROW,->> 
105 <ID,buff_size> 
105 <RPB,)> 
105 <SEM,;> 
106 <ID,lex> 
106 <ARROW,->> 
106 <ID,line> 
106 <ASSIGN,=> 
106 <CDOUBLE,1> 
106 <SEM,;> 
107 <ID,lex> 
107 <ARROW,->> 
107 <ID,chpos> 
107 <ASSIGN,=> 
107 <CDOUBLE,1> 
107 <SEM,;> 
108 <ID,lex> 
108 <ARROW,->> 
108 <ID,finish> 
108 <ASSIGN,=> 
108 <CDOUBLE,0> 
108 <SEM,;> 
109 <ID,lex> 
109 <ARROW,->> 
109 <ID,source_file> 
109 <ASSIGN,=> 
109 <ID,fopen> 
109 <LPB,(> 
109 <ID,lex> 
109 <ARROW,->> 
109 <ID,filename> 
109 <COM,,> 
109 <CSTRING,"r"> 
109 <RPB,)> 
109 <SEM,;> 
111 <IF,if> 
111 <LPB,(> 
111 <ID,lex> 
111 <ARROW,->> 
111 <ID,source_file> 
111 <EQ,==> 
111 <ID,NULL> 
111 <RPB,)> 
111 <LBS,{> 
112 <ID,debug> 
112 <LPB,(> 
112 <CSTRING,"文件损坏"> 
112 <RPB,)> 
112 <SEM,;> 
113 <ID,lex> 
113 <ARROW,->> 
113 <ID,finish> 
113 <ASSIGN,=> 
113 <CDOUBLE,0> 
113 <SEM,;> 
114 <RETURN,return> 
114 <SEM,;> 
115 <RBS,}> 
116 <ID,fill_buff> 
116 <LPB,(> 
116 <ID,lex> 
116 <ARROW,->> 
116 <ID,buff_alpha> 
116 <COM,,> 
116 <ID,lex> 
116 <ARROW,->> 
116 <ID,buff_size> 
116 <COM,,> 
116 <ID,lex> 
116 <ARROW,->> 
116 <ID,source_file> 
116 <RPB,)> 
116 <SEM,;> 
117 <ID,lex> 
117 <ARROW,->> 
117 <ID,buff_beta> 
117 <LBK,[> 
117 <ID,lex> 
117 <ARROW,->> 
117 <ID,buff_size> 
117 <SUB,-> 
117 <CDOUBLE,1> 
117 <RBK,]> 
117 <ASSIGN,=> 
117 <ID,LEX_WHATCHER> 
117 <SEM,;> 
118 <ID,lex> 
118 <ARROW,->> 
118 <ID,lex_begin> 
118 <ASSIGN,=> 
118 <ID,lex> 
118 <ARROW,->> 
118 <ID,buff_alpha> 
118 <SEM,;> 
119 <ID,lex> 
119 <ARROW,->> 
119 <ID,forward> 
119 <ASSIGN,=> 
119 <ID,lex> 
119 <ARROW,->> 
119 <ID,buff_alpha> 
119 <SEM,;> 
120 <RBS,}> 
127 <VOID,void> 
127 <ID,lex_test> 
127 <LPB,(> 
127 <ID,Lex> 
127 <STAR,*> 
127 <ID,lex> 
127 <RPB,)> 
128 <LBS,{> 
129 <IF,if> 
129 <LPB,(> 
129 <ID,lex> 
129 <ARROW,->> 
129 <ID,source_file> 
129 <EQ,==> 
129 <ID,NULL> 
129 <RPB,)> 
129 <LBS,{> 
130 <ID,lex> 
130 <ARROW,->> 
130 <ID,finish> 
130 <ASSIGN,=> 
130 <CDOUBLE,1> 
130 <SEM,;> 
131 <RETURN,return> 
131 <SEM,;> 
132 <RBS,}> 
134 <IF,if> 
134 <LPB,(> 
134 <ID,lex> 
134 <ARROW,->> 
134 <ID,forward> 
134 <EQ,==> 
134 <ID,lex> 
134 <ARROW,->> 
134 <ID,buff_alpha> 
134 <PLUS,+> 
134 <ID,lex> 
134 <ARROW,->> 
134 <ID,buff_size> 
134 <SUB,-> 
134 <CDOUBLE,1> 
134 <RPB,)> 
134 <LBS,{> 
135 <ID,fill_buff> 
135 <LPB,(> 
135 <ID,lex> 
135 <ARROW,->> 
135 <ID,buff_beta> 
135 <COM,,> 
135 <ID,lex> 
135 <ARROW,->> 
135 <ID,buff_size> 
135 <COM,,> 
135 <ID,lex> 
135 <ARROW,->> 
135 <ID,source_file> 
135 <RPB,)> 
135 <SEM,;> 
136 <ID,lex> 
136 <ARROW,->> 
136 <ID,forward> 
136 <ASSIGN,=> 
136 <ID,lex> 
136 <ARROW,->> 
136 <ID,buff_beta> 
136 <SEM,;> 
138 <RBS,}> 
138 <ELSE,else> 
138 <IF,if> 
138 <LPB,(> 
138 <ID,lex> 
138 <ARROW,->> 
138 <ID,forward> 
138 <EQ,==> 
138 <ID,lex> 
138 <ARROW,->> 
138 <ID,buff_beta> 
138 <PLUS,+> 
138 <ID,lex> 
138 <ARROW,->> 
138 <ID,buff_size> 
138 <SUB,-> 
138 <CDOUBLE,1> 
138 <RPB,)> 
138 <LBS,{> 
139 <ID,fill_buff> 
139 <LPB,(> 
139 <ID,lex> 
139 <ARROW,->> 
139 <ID,buff_alpha> 
139 <COM,,> 
139 <ID,lex> 
139 <ARROW,->> 
139 <ID,buff_size> 
139 <COM,,> 
139 <ID,lex> 
139 <ARROW,->> 
139 <ID,source_file> 
139 <RPB,)> 
139 <SEM,;> 
140 <ID,lex> 
140 <ARROW,->> 
140 <ID,forward> 
140 <ASSIGN,=> 
140 <ID,lex> 
140 <ARROW,->> 
140 <ID,buff_alpha> 
140 <SEM,;> 
142 <RBS,}> 
142 <ELSE,else> 
142 <LBS,{> 
143 <ID,lex> 
143 <ARROW,->> 
143 <ID,finish> 
143 <ASSIGN,=> 
143 <CDOUBLE,1> 
143 <SEM,;> 
144 <RBS,}> 
145 <RBS,}> 
151 <INT,int> 
151 <ID,is_alpha> 
151 <LPB,(> 
151 <CHAR,char> 
151 <ID,ch> 
151 <RPB,)> 
152 <LBS,{> 
153 <RETURN,return> 
153 <LPB,(> 
153 <ID,ch> 
153 <LEQ,<=> 
153 <CCHAR,'Z'> 
153 <AND,&&> 
153 <ID,ch> 
153 <GEQ,>=> 
153 <CCHAR,'A'> 
153 <RPB,)> 
153 <OR,||> 
153 <LPB,(> 
153 <ID,ch> 
153 <LEQ,<=> 
153 <CCHAR,'z'> 
153 <AND,&&> 
153 <ID,ch> 
153 <GEQ,>=> 
153 <CCHAR,'a'> 
153 <RPB,)> 
153 <SEM,;> 
154 <RBS,}> 
155 <INT,int> 
155 <ID,is_digit> 
155 <LPB,(> 
155 <CHAR,char> 
155 <ID,ch> 
155 <RPB,)> 
156 <LBS,{> 
157 <RETURN,return> 
157 <LPB,(> 
157 <ID,ch> 
157 <LEQ,<=> 
157 <CCHAR,'9'> 
157 <AND,&&> 
157 <ID,ch> 
157 <GEQ,>=> 
157 <CCHAR,'0'> 
157 <RPB,)> 
157 <SEM,;> 
158 <RBS,}> 
160 <INT,int> 
160 <ID,streq> 
160 <LPB,(> 
160 <CHAR,char> 
160 <STAR,*> 
160 <ID,s> 
160 <COM,,> 
160 <CHAR,char> 
160 <STAR,*> 
160 <ID,e> 
160 <RPB,)> 
161 <LBS,{> 
162 <INT,int> 
162 <ID,i> 
162 <ASSIGN,=> 
162 <CDOUBLE,0> 
162 <SEM,;> 
163 <WHILE,while> 
163 <LPB,(> 
163 <ID,s> 
163 <LBK,[> 
163 <ID,i> 
163 <RBK,]> 
163 <NEQ,!=> 
163 <CDOUBLE,0> 
163 <AND,&&> 
163 <ID,e> 
163 <LBK,[> 
163 <ID,i> 
163 <RBK,]> 
163 <NEQ,!=> 
163 <CDOUBLE,0> 
163 <RPB,)> 
163 <LBS,{> 
164 <IF,if> 
164 <LPB,(> 
164 <ID,s> 
164 <LBK,[> 
164 <ID,i> 
164 <RBK,]> 
164 <NEQ,!=> 
164 <ID,e> 
164 <LBK,[> 
164 <ID,i> 
164 <RBK,]> 
164 <RPB,)> 
164 <RETURN,return> 
164 <CDOUBLE,0> 
164 <SEM,;> 
165 <ID,i> 
165 <SPLUS,++> 
165 <SEM,;> 
166 <RBS,}> 
167 <RETURN,return> 
167 <ID,s> 
167 <LBK,[> 
167 <ID,i> 
167 <RBK,]> 
167 <EQ,==> 
167 <ID,e> 
167 <LBK,[> 
167 <ID,i> 
167 <RBK,]> 
167 <SEM,;> 
168 <RBS,}> 
171 <ENUM,enum> 
171 <ID,Token> 
171 <ID,lex_keyword> 
171 <LPB,(> 
171 <ID,Lex> 
171 <STAR,*> 
171 <ID,lex> 
171 <RPB,)> 
172 <LBS,{> 
174 <CHAR,char> 
174 <STAR,*> 
174 <ID,w> 
174 <ASSIGN,=> 
174 <ID,lex> 
174 <ARROW,->> 
174 <ID,value> 
174 <SEM,;> 
175 <SWITCH,switch> 
175 <LPB,(> 
175 <ID,w> 
175 <LBK,[> 
175 <CDOUBLE,0> 
175 <RBK,]> 
175 <RPB,)> 
175 <LBS,{> 
176 <CASE,case> 
176 <CCHAR,'f'> 
176 <COL,:> 
177 <IF,if> 
177 <LPB,(> 
177 <ID,streq> 
177 <LPB,(> 
177 <ID,w> 
177 <COM,,> 
177 <CSTRING,"float"> 
177 <RPB,)> 
177 <RPB,)> 
177 <LBS,{> 
178 <RETURN,return> 
178 <ID,FLOAT> 
178 <SEM,;> 
179 <RBS,}> 
179 <ELSE,else> 
179 <IF,if> 
179 <LPB,(> 
179 <ID,streq> 
179 <LPB,(> 
179 <ID,w> 
179 <COM,,> 
179 <CSTRING,"for"> 
179 <RPB,)> 
179 <RPB,)> 
179 <LBS,{> 
180 <RETURN,return> 
180 <ID,FOR> 
180 <SEM,;> 
181 <RBS,}> 
182 <BREAK,break> 
182 <SEM,;> 
183 <CASE,case> 
183 <CCHAR,'b'> 
183 <COL,:> 
184 <IF,if> 
184 <LPB,(> 
184 <ID,streq> 
184 <LPB,(> 
184 <ID,w> 
184 <COM,,> 
184 <CSTRING,"break"> 
184 <RPB,)> 
184 <RPB,)> 
184 <LBS,{> 
185 <RETURN,return> 
185 <ID,BREAK> 
185 <SEM,;> 
186 <RBS,}> 
187 <BREAK,break> 
187 <SEM,;> 
188 <CASE,case> 
188 <CCHAR,'r'> 
188 <COL,:> 
189 <IF,if> 
189 <LPB,(> 
189 <ID,streq> 
189 <LPB,(> 
189 <ID,w> 
189 <COM,,> 
189 <CSTRING,"retu> 
189 <RPB,)> 
189 <RPB,)> 
189 <LBS,{> 
190 <RETURN,return> 
190 <ID,RETURN> 
190 <SEM,;> 
191 <RBS,}> 
192 <BREAK,break> 
192 <SEM,;> 
193 <CASE,case> 
193 <CCHAR,'l'> 
193 <COL,:> 
194 <IF,if> 
194 <LPB,(> 
194 <ID,streq> 
194 <LPB,(> 
194 <ID,w> 
194 <COM,,> 
194 <CSTRING,"long"> 
194 <RPB,)> 
194 <RPB,)> 
194 <LBS,{> 
195 <RETURN,return> 
195 <ID,LONG> 
195 <SEM,;> 
196 <RBS,}> 
197 <BREAK,break> 
197 <SEM,;> 
198 <CASE,case> 
198 <CCHAR,'u'> 
198 <COL,:> 
199 <IF,if> 
199 <LPB,(> 
199 <ID,streq> 
199 <LPB,(> 
199 <ID,w> 
199 <COM,,> 
199 <CSTRING,"unsigned"> 
199 <RPB,)> 
199 <RPB,)> 
199 <LBS,{> 
200 <RETURN,return> 
200 <ID,UNSIGNED> 
200 <SEM,;> 
201 <RBS,}> 
202 <BREAK,break> 
202 <SEM,;> 
203 <CASE,case> 
203 <CCHAR,'w'> 
203 <COL,:> 
204 <IF,if> 
204 <LPB,(> 
204 <ID,streq> 
204 <LPB,(> 
204 <ID,w> 
204 <COM,,> 
204 <CSTRING,"while"> 
204 <RPB,)> 
204 <RPB,)> 
204 <LBS,{> 
205 <RETURN,return> 
205 <ID,WHILE> 
205 <SEM,;> 
206 <RBS,}> 
207 <BREAK,break> 
207 <SEM,;> 
208 <CASE,case> 
208 <CCHAR,'d'> 
208 <COL,:> 
209 <IF,if> 
209 <LPB,(> 
209 <ID,streq> 
209 <LPB,(> 
209 <ID,w> 
209 <COM,,> 
209 <CSTRING,"double"> 
209 <RPB,)> 
209 <RPB,)> 
209 <LBS,{> 
210 <RETURN,return> 
210 <ID,DOUBLE> 
210 <SEM,;> 
211 <RBS,}> 
211 <ELSE,else> 
211 <IF,if> 
211 <LPB,(> 
211 <ID,streq> 
211 <LPB,(> 
211 <ID,w> 
211 <COM,,> 
211 <CSTRING,"do"> 
211 <RPB,)> 
211 <RPB,)> 
211 <LBS,{> 
212 <RETURN,return> 
212 <ID,DO> 
212 <SEM,;> 
213 <RBS,}> 
213 <ELSE,else> 
213 <IF,if> 
213 <LPB,(> 
213 <ID,streq> 
213 <LPB,(> 
213 <ID,w> 
213 <COM,,> 
213 <CSTRING,"default"> 
213 <RPB,)> 
213 <RPB,)> 
213 <LBS,{> 
214 <RETURN,return> 
214 <ID,DEFAULT> 
214 <SEM,;> 
215 <RBS,}> 
216 <BREAK,break> 
216 <SEM,;> 
217 <CASE,case> 
217 <CCHAR,'e'> 
217 <COL,:> 
218 <IF,if> 
218 <LPB,(> 
218 <ID,streq> 
218 <LPB,(> 
218 <ID,w> 
218 <COM,,> 
218 <CSTRING,"enum"> 
218 <RPB,)> 
218 <RPB,)> 
218 <LBS,{> 
219 <RETURN,return> 
219 <ID,ENUM> 
219 <SEM,;> 
220 <RBS,}> 
220 <ELSE,else> 
220 <IF,if> 
220 <LPB,(> 
220 <ID,streq> 
220 <LPB,(> 
220 <ID,w> 
220 <COM,,> 
220 <CSTRING,"extern"> 
220 <RPB,)> 
220 <RPB,)> 
220 <LBS,{> 
221 <RETURN,return> 
221 <ID,EXTERN> 
221 <SEM,;> 
222 <RBS,}> 
222 <ELSE,else> 
222 <IF,if> 
222 <LPB,(> 
222 <ID,streq> 
222 <LPB,(> 
222 <ID,w> 
222 <COM,,> 
222 <CSTRING,"else"> 
222 <RPB,)> 
222 <RPB,)> 
222 <LBS,{> 
223 <RETURN,return> 
223 <ID,ELSE> 
223 <SEM,;> 
224 <RBS,}> 
225 <BREAK,break> 
225 <SEM,;> 
226 <CASE,case> 
226 <CCHAR,'s'> 
226 <COL,:> 
227 <IF,if> 
227 <LPB,(> 
227 <ID,streq> 
227 <LPB,(> 
227 <ID,w> 
227 <COM,,> 
227 <CSTRING,"short"> 
227 <RPB,)> 
227 <RPB,)> 
227 <LBS,{> 
228 <RETURN,return> 
228 <ID,SHORT> 
228 <SEM,;> 
229 <RBS,}> 
229 <ELSE,else> 
229 <IF,if> 
229 <LPB,(> 
229 <ID,streq> 
229 <LPB,(> 
229 <ID,w> 
229 <COM,,> 
229 <CSTRING,"struct"> 
229 <RPB,)> 
229 <RPB,)> 
229 <LBS,{> 
230 <RETURN,return> 
230 <ID,STRUCT> 
230 <SEM,;> 
231 <RBS,}> 
231 <ELSE,else> 
231 <IF,if> 
231 <LPB,(> 
231 <ID,streq> 
231 <LPB,(> 
231 <ID,w> 
231 <COM,,> 
231 <CSTRING,"static"> 
231 <RPB,)> 
231 <RPB,)> 
231 <LBS,{> 
232 <RETURN,return> 
232 <ID,STATIC> 
232 <SEM,;> 
233 <RBS,}> 
233 <ELSE,else> 
233 <IF,if> 
233 <LPB,(> 
233 <ID,streq> 
233 <LPB,(> 
233 <ID,w> 
233 <COM,,> 
233 <CSTRING,"switch"> 
233 <RPB,)> 
233 <RPB,)> 
233 <LBS,{> 
234 <RETURN,return> 
234 <ID,SWITCH> 
234 <SEM,;> 
235 <RBS,}> 
236 <BREAK,break> 
236 <SEM,;> 
237 <CASE,case> 
237 <CCHAR,'v'> 
237 <COL,:> 
238 <IF,if> 
238 <LPB,(> 
238 <ID,streq> 
238 <LPB,(> 
238 <ID,w> 
238 <COM,,> 
238 <CSTRING,"void"> 
238 <RPB,)> 
238 <RPB,)> 
238 <LBS,{> 
239 <RETURN,return> 
239 <ID,VOID> 
239 <SEM,;> 
240 <RBS,}> 
241 <BREAK,break> 
241 <SEM,;> 
242 <CASE,case> 
242 <CCHAR,'i'> 
242 <COL,:> 
243 <IF,if> 
243 <LPB,(> 
243 <ID,streq> 
243 <LPB,(> 
243 <ID,w> 
243 <COM,,> 
243 <CSTRING,"import"> 
243 <RPB,)> 
243 <RPB,)> 
243 <LBS,{> 
244 <RETURN,return> 
244 <ID,IMPORT> 
244 <SEM,;> 
245 <RBS,}> 
245 <ELSE,else> 
245 <IF,if> 
245 <LPB,(> 
245 <ID,streq> 
245 <LPB,(> 
245 <ID,w> 
245 <COM,,> 
245 <CSTRING,"if"> 
245 <RPB,)> 
245 <RPB,)> 
245 <LBS,{> 
246 <RETURN,return> 
246 <ID,IF> 
246 <SEM,;> 
247 <RBS,}> 
247 <ELSE,else> 
247 <IF,if> 
247 <LPB,(> 
247 <ID,streq> 
247 <LPB,(> 
247 <ID,w> 
247 <COM,,> 
247 <CSTRING,"int"> 
247 <RPB,)> 
247 <RPB,)> 
247 <LBS,{> 
248 <RETURN,return> 
248 <ID,INT> 
248 <SEM,;> 
249 <RBS,}> 
250 <BREAK,break> 
250 <SEM,;> 
251 <CASE,case> 
251 <CCHAR,'c'> 
251 <COL,:> 
252 <IF,if> 
252 <LPB,(> 
252 <ID,streq> 
252 <LPB,(> 
252 <ID,w> 
252 <COM,,> 
252 <CSTRING,"char"> 
252 <RPB,)> 
252 <RPB,)> 
252 <LBS,{> 
253 <RETURN,return> 
253 <ID,CHAR> 
253 <SEM,;> 
254 <RBS,}> 
254 <ELSE,else> 
254 <IF,if> 
254 <LPB,(> 
254 <ID,streq> 
254 <LPB,(> 
254 <ID,w> 
254 <COM,,> 
254 <CSTRING,"const"> 
254 <RPB,)> 
254 <RPB,)> 
254 <LBS,{> 
255 <RETURN,return> 
255 <ID,CONST> 
255 <SEM,;> 
256 <RBS,}> 
256 <ELSE,else> 
256 <IF,if> 
256 <LPB,(> 
256 <ID,streq> 
256 <LPB,(> 
256 <ID,w> 
256 <COM,,> 
256 <CSTRING,"case"> 
256 <RPB,)> 
256 <RPB,)> 
256 <LBS,{> 
257 <RETURN,return> 
257 <ID,CASE> 
257 <SEM,;> 
258 <RBS,}> 
258 <ELSE,else> 
258 <IF,if> 
258 <LPB,(> 
258 <ID,streq> 
258 <LPB,(> 
258 <ID,w> 
258 <COM,,> 
258 <CSTRING,"continue"> 
258 <RPB,)> 
258 <RPB,)> 
258 <LBS,{> 
259 <RETURN,return> 
259 <ID,CONTINUE> 
259 <SEM,;> 
260 <RBS,}> 
261 <BREAK,break> 
261 <SEM,;> 
262 <RBS,}> 
264 <RETURN,return> 
264 <ID,ID> 
264 <SEM,;> 
265 <RBS,}> 
269 <ENUM,enum> 
269 <ID,Token> 
269 <ID,lex_next_token> 
269 <LPB,(> 
269 <ID,Lex> 
269 <STAR,*> 
269 <ID,lex> 
269 <RPB,)> 
270 <LBS,{> 
271 <INT,int> 
271 <ID,ch> 
271 <SEM,;> 
273 <ENUM,enum> 
273 <ID,Token> 
273 <ID,tk> 
273 <SEM,;> 
274 <INT,int> 
274 <ID,wp> 
274 <ASSIGN,=> 
274 <CDOUBLE,0> 
274 <SEM,;> 
275 <ID,lex> 
275 <ARROW,->> 
275 <ID,lex_begin> 
275 <ASSIGN,=> 
275 <ID,lex> 
275 <ARROW,->> 
275 <ID,forward> 
275 <SEM,;> 
276 <ID,ch> 
276 <ASSIGN,=> 
276 <STAR,*> 
276 <ID,lex> 
276 <ARROW,->> 
276 <ID,forward> 
276 <SEM,;> 
277 <ID,lex> 
277 <ARROW,->> 
277 <ID,value> 
277 <LBK,[> 
277 <ID,wp> 
277 <SPLUS,++> 
277 <RBK,]> 
277 <ASSIGN,=> 
277 <ID,ch> 
277 <SEM,;> 
278 <IF,if> 
278 <LPB,(> 
278 <ID,ch> 
278 <EQ,==> 
278 <ID,LEX_WHATCHER> 
278 <RPB,)> 
278 <LBS,{> 
279 <ID,lex_test> 
279 <LPB,(> 
279 <ID,lex> 
279 <RPB,)> 
279 <SEM,;> 
280 <IF,if> 
280 <LPB,(> 
280 <ID,lex> 
280 <ARROW,->> 
280 <ID,finish> 
280 <RPB,)> 
280 <RETURN,return> 
280 <ID,END> 
280 <SEM,;> 
281 <RETURN,return> 
281 <ID,lex_next_token> 
281 <LPB,(> 
281 <ID,lex> 
281 <RPB,)> 
281 <SEM,;> 
282 <RBS,}> 
282 <ELSE,else> 
282 <IF,if> 
282 <LPB,(> 
282 <ID,ch> 
282 <EQ,==> 
282 <CCHAR,' '> 
282 <RPB,)> 
282 <LBS,{> 
283 <WHILE,while> 
283 <LPB,(> 
283 <ID,ch> 
283 <EQ,==> 
283 <CCHAR,' '> 
283 <RPB,)> 
283 <LBS,{> 
285 <ID,lex> 
285 <ARROW,->> 
285 <ID,forward> 
285 <SPLUS,++> 
285 <SEM,;> 
286 <ID,ch> 
286 <ASSIGN,=> 
286 <STAR,*> 
286 <ID,lex> 
286 <ARROW,->> 
286 <ID,forward> 
286 <SEM,;> 
287 <RBS,}> 
288 <RETURN,return> 
288 <ID,lex_next_token> 
288 <LPB,(> 
288 <ID,lex> 
288 <RPB,)> 
288 <SEM,;> 
289 <RBS,}> 
289 <ELSE,else> 
289 <IF,if> 
289 <LPB,(> 
289 <ID,ch> 
289 <EQ,==> 
289 <CCHAR,'\n'> 
289 <RPB,)> 
289 <LBS,{> 
290 <ID,lex> 
290 <ARROW,->> 
290 <ID,forward> 
290 <SPLUS,++> 
290 <SEM,;> 
291 <ID,lex> 
291 <ARROW,->> 
291 <ID,line> 
291 <SPLUS,++> 
291 <SEM,;> 
292 <RETURN,return> 
292 <ID,lex_next_token> 
292 <LPB,(> 
292 <ID,lex> 
292 <RPB,)> 
292 <SEM,;> 
293 <RBS,}> 
293 <ELSE,else> 
293 <IF,if> 
293 <LPB,(> 
293 <ID,ch> 
293 <EQ,==> 
293 <CCHAR,'('> 
293 <RPB,)> 
293 <LBS,{> 
294 <ID,tk> 
294 <ASSIGN,=> 
294 <ID,LPB> 
294 <SEM,;> 
295 <RBS,}> 
295 <ELSE,else> 
295 <IF,if> 
295 <LPB,(> 
295 <ID,ch> 
295 <EQ,==> 
295 <CCHAR,')'> 
295 <RPB,)> 
295 <LBS,{> 
296 <ID,tk> 
296 <ASSIGN,=> 
296 <ID,RPB> 
296 <SEM,;> 
297 <RBS,}> 
297 <ELSE,else> 
297 <IF,if> 
297 <LPB,(> 
297 <ID,ch> 
297 <EQ,==> 
297 <CCHAR,'['> 
297 <RPB,)> 
297 <LBS,{> 
298 <ID,tk> 
298 <ASSIGN,=> 
298 <ID,LBK> 
298 <SEM,;> 
299 <RBS,}> 
299 <ELSE,else> 
299 <IF,if> 
299 <LPB,(> 
299 <ID,ch> 
299 <EQ,==> 
299 <CCHAR,']'> 
299 <RPB,)> 
299 <LBS,{> 
300 <ID,tk> 
300 <ASSIGN,=> 
300 <ID,RBK> 
300 <SEM,;> 
301 <RBS,}> 
301 <ELSE,else> 
301 <IF,if> 
301 <LPB,(> 
301 <ID,ch> 
301 <EQ,==> 
301 <CCHAR,'{'> 
301 <RPB,)> 
301 <LBS,{> 
302 <ID,tk> 
302 <ASSIGN,=> 
302 <ID,LBS> 
302 <SEM,;> 
303 <RBS,}> 
303 <ELSE,else> 
303 <IF,if> 
303 <LPB,(> 
303 <ID,ch> 
303 <EQ,==> 
303 <CCHAR,'}'> 
303 <RPB,)> 
303 <LBS,{> 
304 <ID,tk> 
304 <ASSIGN,=> 
304 <ID,RBS> 
304 <SEM,;> 
305 <RBS,}> 
305 <ELSE,else> 
305 <IF,if> 
305 <LPB,(> 
305 <ID,ch> 
305 <EQ,==> 
305 <CCHAR,','> 
305 <RPB,)> 
305 <LBS,{> 
306 <ID,tk> 
306 <ASSIGN,=> 
306 <ID,COM> 
306 <SEM,;> 
307 <RBS,}> 
307 <ELSE,else> 
307 <IF,if> 
307 <LPB,(> 
307 <ID,ch> 
307 <EQ,==> 
307 <CCHAR,':'> 
307 <RPB,)> 
307 <LBS,{> 
308 <ID,tk> 
308 <ASSIGN,=> 
308 <ID,COL> 
308 <SEM,;> 
309 <RBS,}> 
309 <ELSE,else> 
309 <IF,if> 
309 <LPB,(> 
309 <ID,ch> 
309 <EQ,==> 
309 <CCHAR,';'> 
309 <RPB,)> 
309 <LBS,{> 
310 <ID,tk> 
310 <ASSIGN,=> 
310 <ID,SEM> 
310 <SEM,;> 
311 <RBS,}> 
311 <ELSE,else> 
311 <IF,if> 
311 <LPB,(> 
311 <ID,ch> 
311 <EQ,==> 
311 <CCHAR,'.'> 
311 <RPB,)> 
311 <LBS,{> 
312 <ID,tk> 
312 <ASSIGN,=> 
312 <ID,DOT> 
312 <SEM,;> 
313 <RBS,}> 
313 <ELSE,else> 
313 <IF,if> 
313 <LPB,(> 
313 <ID,ch> 
313 <EQ,==> 
313 <CCHAR,'&'> 
313 <RPB,)> 
313 <LBS,{> 
314 <ID,ch> 
314 <ASSIGN,=> 
314 <STAR,*> 
314 <LPB,(> 
314 <SPLUS,++> 
314 <ID,lex> 
314 <ARROW,->> 
314 <ID,forward> 
314 <RPB,)> 
314 <SEM,;> 
315 <ID,lex> 
315 <ARROW,->> 
315 <ID,value> 
315 <LBK,[> 
315 <ID,wp> 
315 <SPLUS,++> 
315 <RBK,]> 
315 <ASSIGN,=> 
315 <ID,ch> 
315 <SEM,;> 
316 <IF,if> 
316 <LPB,(> 
316 <ID,ch> 
316 <EQ,==> 
316 <CCHAR,'='> 
316 <RPB,)> 
316 <LBS,{> 
317 <ID,tk> 
317 <ASSIGN,=> 
317 <ID,AAS> 
317 <SEM,;> 
318 <RBS,}> 
318 <ELSE,else> 
318 <IF,if> 
318 <LPB,(> 
318 <ID,ch> 
318 <EQ,==> 
318 <CCHAR,'&'> 
318 <RPB,)> 
318 <LBS,{> 
319 <ID,tk> 
319 <ASSIGN,=> 
319 <ID,AND> 
319 <SEM,;> 
320 <RBS,}> 
320 <ELSE,else> 
320 <LBS,{> 
321 <ID,tk> 
321 <ASSIGN,=> 
321 <ID,BAND> 
321 <SEM,;> 
322 <ID,lex> 
322 <ARROW,->> 
322 <ID,value> 
322 <LBK,[> 
322 <ID,wp> 
322 <SUB,-> 
322 <CDOUBLE,1> 
322 <RBK,]> 
322 <ASSIGN,=> 
322 <CDOUBLE,0> 
322 <SEM,;> 
323 <ID,le> 
323 <ID,x> 
323 <ARROW,->> 
323 <ID,forward> 
323 <ASSIGN,=> 
323 <ID,lex> 
323 <ARROW,->> 
323 <ID,lex_begin> 
323 <SEM,;> 
324 <RBS,}> 
325 <RBS,}> 
325 <ELSE,else> 
325 <IF,if> 
325 <LPB,(> 
325 <ID,ch> 
325 <EQ,==> 
325 <CCHAR,'|'> 
325 <RPB,)> 
325 <LBS,{> 
326 <ID,ch> 
326 <ASSIGN,=> 
326 <STAR,*> 
326 <LPB,(> 
326 <SPLUS,++> 
326 <ID,lex> 
326 <ARROW,->> 
326 <ID,forward> 
326 <RPB,)> 
326 <SEM,;> 
327 <ID,lex> 
327 <ARROW,->> 
327 <ID,value> 
327 <LBK,[> 
327 <ID,wp> 
327 <SPLUS,++> 
327 <RBK,]> 
327 <ASSIGN,=> 
327 <ID,ch> 
327 <SEM,;> 
328 <IF,if> 
328 <LPB,(> 
328 <ID,ch> 
328 <EQ,==> 
328 <CCHAR,'='> 
328 <RPB,)> 
328 <LBS,{> 
329 <ID,tk> 
329 <ASSIGN,=> 
329 <ID,OAS> 
329 <SEM,;> 
330 <RBS,}> 
330 <ELSE,else> 
330 <IF,if> 
330 <LPB,(> 
330 <ID,ch> 
330 <EQ,==> 
330 <CCHAR,'|'> 
330 <RPB,)> 
330 <LBS,{> 
331 <ID,tk> 
331 <ASSIGN,=> 
331 <ID,OR> 
331 <SEM,;> 
332 <RBS,}> 
332 <ELSE,else> 
332 <LBS,{> 
333 <ID,tk> 
333 <ASSIGN,=> 
333 <ID,BOR> 
333 <SEM,;> 
334 <ID,lex> 
334 <ARROW,->> 
334 <ID,value> 
334 <LBK,[> 
334 <ID,wp> 
334 <SUB,-> 
334 <CDOUBLE,1> 
334 <RBK,]> 
334 <ASSIGN,=> 
334 <CDOUBLE,0> 
334 <SEM,;> 
335 <ID,lex> 
335 <ARROW,->> 
335 <ID,forward> 
335 <ASSIGN,=> 
335 <ID,lex> 
335 <ARROW,->> 
335 <ID,lex_begin> 
335 <SEM,;> 
336 <RBS,}> 
337 <RBS,}> 
337 <ELSE,else> 
337 <IF,if> 
337 <LPB,(> 
337 <ID,ch> 
337 <EQ,==> 
337 <CCHAR,'^'> 
337 <RPB,)> 
337 <LBS,{> 
338 <ID,ch> 
338 <ASSIGN,=> 
338 <STAR,*> 
338 <LPB,(> 
338 <SPLUS,++> 
338 <ID,lex> 
338 <ARROW,->> 
338 <ID,forward> 
338 <RPB,)> 
338 <SEM,;> 
339 <ID,lex> 
339 <ARROW,->> 
339 <ID,value> 
339 <LBK,[> 
339 <ID,wp> 
339 <SPLUS,++> 
339 <RBK,]> 
339 <ASSIGN,=> 
339 <ID,ch> 
339 <SEM,;> 
340 <IF,if> 
340 <LPB,(> 
340 <ID,ch> 
340 <EQ,==> 
340 <CCHAR,'='> 
340 <RPB,)> 
340 <LBS,{> 
341 <ID,tk> 
341 <ASSIGN,=> 
341 <ID,XAS> 
341 <SEM,;> 
342 <RBS,}> 
342 <ELSE,else> 
342 <LBS,{> 
343 <ID,tk> 
343 <ASSIGN,=> 
343 <ID,XOR> 
343 <SEM,;> 
344 <ID,lex> 
344 <ARROW,->> 
344 <ID,value> 
344 <LBK,[> 
344 <ID,wp> 
344 <SUB,-> 
344 <CDOUBLE,1> 
344 <RBK,]> 
344 <ASSIGN,=> 
344 <CDOUBLE,0> 
344 <SEM,;> 
345 <ID,lex> 
345 <ARROW,->> 
345 <ID,forward> 
345 <ASSIGN,=> 
345 <ID,lex> 
345 <ARROW,->> 
345 <ID,lex_begin> 
345 <SEM,;> 
346 <RBS,}> 
347 <RBS,}> 
347 <ELSE,else> 
347 <IF,if> 
347 <LPB,(> 
347 <ID,ch> 
347 <EQ,==> 
347 <CCHAR,'!'> 
347 <RPB,)> 
347 <LBS,{> 
348 <ID,ch> 
348 <ASSIGN,=> 
348 <STAR,*> 
348 <LPB,(> 
348 <SPLUS,++> 
348 <ID,lex> 
348 <ARROW,->> 
348 <ID,forward> 
348 <RPB,)> 
348 <SEM,;> 
349 <ID,lex> 
349 <ARROW,->> 
349 <ID,value> 
349 <LBK,[> 
349 <ID,wp> 
349 <SPLUS,++> 
349 <RBK,]> 
349 <ASSIGN,=> 
349 <ID,ch> 
349 <SEM,;> 
350 <IF,if> 
350 <LPB,(> 
350 <ID,ch> 
350 <EQ,==> 
350 <CCHAR,'='> 
350 <RPB,)> 
350 <LBS,{> 
351 <ID,tk> 
351 <ASSIGN,=> 
351 <ID,NEQ> 
351 <SEM,;> 
352 <RBS,}> 
352 <ELSE,else> 
352 <LBS,{> 
353 <ID,tk> 
353 <ASSIGN,=> 
353 <ID,NOT> 
353 <SEM,;> 
354 <ID,lex> 
354 <ARROW,->> 
354 <ID,value> 
354 <LBK,[> 
354 <ID,wp> 
354 <SUB,-> 
354 <CDOUBLE,1> 
354 <RBK,]> 
354 <ASSIGN,=> 
354 <CDOUBLE,0> 
354 <SEM,;> 
355 <ID,lex> 
355 <ARROW,->> 
355 <ID,forward> 
355 <ASSIGN,=> 
355 <ID,lex> 
355 <ARROW,->> 
355 <ID,lex_begin> 
355 <SEM,;> 
356 <RBS,}> 
357 <RBS,}> 
357 <ELSE,else> 
357 <IF,if> 
357 <LPB,(> 
357 <ID,ch> 
357 <EQ,==> 
357 <CCHAR,'='> 
357 <RPB,)> 
357 <LBS,{> 
358 <ID,ch> 
358 <ASSIGN,=> 
358 <STAR,*> 
358 <LPB,(> 
358 <SPLUS,++> 
358 <ID,lex> 
358 <ARROW,->> 
358 <ID,forward> 
358 <RPB,)> 
358 <SEM,;> 
359 <ID,lex> 
359 <ARROW,->> 
359 <ID,value> 
359 <LBK,[> 
359 <ID,wp> 
359 <SPLUS,++> 
359 <RBK,]> 
359 <ASSIGN,=> 
359 <ID,ch> 
359 <SEM,;> 
360 <IF,if> 
360 <LPB,(> 
360 <ID,ch> 
360 <EQ,==> 
360 <CCHAR,'='> 
360 <RPB,)> 
360 <LBS,{> 
361 <ID,tk> 
361 <ASSIGN,=> 
361 <ID,EQ> 
361 <SEM,;> 
362 <RBS,}> 
362 <ELSE,else> 
362 <LBS,{> 
363 <ID,tk> 
363 <ASSIGN,=> 
363 <ID,ASSIGN> 
363 <SEM,;> 
364 <ID,lex> 
364 <ARROW,->> 
364 <ID,value> 
364 <LBK,[> 
364 <ID,wp> 
364 <SUB,-> 
364 <CDOUBLE,1> 
364 <RBK,]> 
364 <ASSIGN,=> 
364 <CDOUBLE,0> 
364 <SEM,;> 
365 <ID,lex> 
365 <ARROW,->> 
365 <ID,forward> 
365 <ASSIGN,=> 
365 <ID,lex> 
365 <ARROW,->> 
365 <ID,lex_begin> 
365 <SEM,;> 
366 <RBS,}> 
367 <RBS,}> 
367 <ELSE,else> 
367 <IF,if> 
367 <LPB,(> 
367 <ID,ch> 
367 <EQ,==> 
367 <CCHAR,'+'> 
367 <RPB,)> 
367 <LBS,{> 
368 <ID,ch> 
368 <ASSIGN,=> 
368 <STAR,*> 
368 <LPB,(> 
368 <SPLUS,++> 
368 <ID,lex> 
368 <ARROW,->> 
368 <ID,forward> 
368 <RPB,)> 
368 <SEM,;> 
369 <ID,lex> 
369 <ARROW,->> 
369 <ID,value> 
369 <LBK,[> 
369 <ID,wp> 
369 <SPLUS,++> 
369 <RBK,]> 
369 <ASSIGN,=> 
369 <ID,ch> 
369 <SEM,;> 
370 <IF,if> 
370 <LPB,(> 
370 <ID,ch> 
370 <EQ,==> 
370 <CCHAR,'='> 
370 <RPB,)> 
370 <LBS,{> 
371 <ID,tk> 
371 <ASSIGN,=> 
371 <ID,PAS> 
371 <SEM,;> 
372 <RBS,}> 
372 <ELSE,else> 
372 <IF,if> 
372 <LPB,(> 
372 <ID,ch> 
372 <EQ,==> 
372 <CCHAR,'+'> 
372 <RPB,)> 
372 <LBS,{> 
373 <ID,tk> 
373 <ASSIGN,=> 
373 <ID,SPLUS> 
373 <SEM,;> 
374 <RBS,}> 
374 <ELSE,else> 
374 <LBS,{> 
375 <ID,lex> 
375 <ARROW,->> 
375 <ID,value> 
375 <LBK,[> 
375 <ID,wp> 
375 <SUB,-> 
375 <CDOUBLE,1> 
375 <RBK,]> 
375 <ASSIGN,=> 
375 <CDOUBLE,0> 
375 <SEM,;> 
376 <ID,tk> 
376 <ASSIGN,=> 
376 <ID,PLUS> 
376 <SEM,;> 
377 <ID,lex> 
377 <ARROW,->> 
377 <ID,forward> 
377 <ASSIGN,=> 
377 <ID,lex> 
377 <ARROW,->> 
377 <ID,lex_begin> 
377 <SEM,;> 
378 <RBS,}> 
379 <RBS,}> 
379 <ELSE,else> 
379 <IF,if> 
379 <LPB,(> 
379 <ID,ch> 
379 <EQ,==> 
379 <CCHAR,'-'> 
379 <RPB,)> 
379 <LBS,{> 
380 <ID,ch> 
380 <ASSIGN,=> 
380 <STAR,*> 
380 <LPB,(> 
380 <SPLUS,++> 
380 <ID,lex> 
380 <ARROW,->> 
380 <ID,forward> 
380 <RPB,)> 
380 <SEM,;> 
381 <ID,lex> 
381 <ARROW,->> 
381 <ID,value> 
381 <LBK,[> 
381 <ID,wp> 
381 <SPLUS,++> 
381 <RBK,]> 
381 <ASSIGN,=> 
381 <ID,ch> 
381 <SEM,;> 
382 <IF,if> 
382 <LPB,(> 
382 <ID,ch> 
382 <EQ,==> 
382 <CCHAR,'='> 
382 <RPB,)> 
382 <LBS,{> 
383 <ID,tk> 
383 <ASSIGN,=> 
383 <ID,SAS> 
383 <SEM,;> 
384 <RBS,}> 
384 <ELSE,else> 
384 <IF,if> 
384 <LPB,(> 
384 <ID,ch> 
384 <EQ,==> 
384 <CCHAR,'-'> 
384 <RPB,)> 
384 <LBS,{> 
385 <ID,tk> 
385 <ASSIGN,=> 
385 <ID,SSUB> 
385 <SEM,;> 
386 <RBS,}> 
386 <ELSE,else> 
386 <IF,if> 
386 <LPB,(> 
386 <ID,ch> 
386 <EQ,==> 
386 <CCHAR,'>'> 
386 <RPB,)> 
386 <LBS,{> 
387 <ID,tk> 
387 <ASSIGN,=> 
387 <ID,ARROW> 
387 <SEM,;> 
388 <RBS,}> 
388 <ELSE,else> 
388 <LBS,{> 
389 <ID,lex> 
389 <ARROW,->> 
389 <ID,value> 
389 <LBK,[> 
389 <ID,wp> 
389 <SUB,-> 
389 <CDOUBLE,1> 
389 <RBK,]> 
389 <ASSIGN,=> 
389 <CDOUBLE,0> 
389 <SEM,;> 
390 <ID,tk> 
390 <ASSIGN,=> 
390 <ID,SUB> 
390 <SEM,;> 
391 <ID,lex> 
391 <ARROW,->> 
391 <ID,forward> 
391 <ASSIGN,=> 
391 <ID,lex> 
391 <ARROW,->> 
391 <ID,lex_begin> 
391 <SEM,;> 
392 <RBS,}> 
393 <RBS,}> 
393 <ELSE,else> 
393 <IF,if> 
393 <LPB,(> 
393 <ID,ch> 
393 <EQ,==> 
393 <CCHAR,'*'> 
393 <RPB,)> 
393 <LBS,{> 
394 <ID,ch> 
394 <ASSIGN,=> 
394 <STAR,*> 
394 <LPB,(> 
394 <SPLUS,++> 
394 <ID,lex> 
394 <ARROW,->> 
394 <ID,forward> 
394 <RPB,)> 
394 <SEM,;> 
395 <ID,lex> 
395 <ARROW,->> 
395 <ID,value> 
395 <LBK,[> 
395 <ID,wp> 
395 <SPLUS,++> 
395 <RBK,]> 
395 <ASSIGN,=> 
395 <ID,ch> 
395 <SEM,;> 
396 <IF,if> 
396 <LPB,(> 
396 <ID,ch> 
396 <EQ,==> 
396 <CCHAR,'='> 
396 <RPB,)> 
396 <LBS,{> 
397 <ID,tk> 
397 <ASSIGN,=> 
397 <ID,MAS> 
397 <SEM,;> 
398 <RBS,}> 
398 <ELSE,else> 
398 <LBS,{> 
399 <ID,lex> 
399 <ARROW,->> 
399 <ID,value> 
399 <LBK,[> 
399 <ID,wp> 
399 <SUB,-> 
399 <CDOUBLE,1> 
399 <RBK,]> 
399 <ASSIGN,=> 
399 <CDOUBLE,0> 
399 <SEM,;> 
400 <ID,tk> 
400 <ASSIGN,=> 
400 <ID,STAR> 
400 <SEM,;> 
401 <ID,l> 
401 <ID,ex> 
401 <ARROW,->> 
401 <ID,forward> 
401 <ASSIGN,=> 
401 <ID,lex> 
401 <ARROW,->> 
401 <ID,lex_begin> 
401 <SEM,;> 
402 <RBS,}> 
403 <RBS,}> 
403 <ELSE,else> 
403 <IF,if> 
403 <LPB,(> 
403 <ID,ch> 
403 <EQ,==> 
403 <CCHAR,'%'> 
403 <RPB,)> 
403 <LBS,{> 
404 <ID,ch> 
404 <ASSIGN,=> 
404 <STAR,*> 
404 <LPB,(> 
404 <SPLUS,++> 
404 <ID,lex> 
404 <ARROW,->> 
404 <ID,forward> 
404 <RPB,)> 
404 <SEM,;> 
405 <ID,lex> 
405 <ARROW,->> 
405 <ID,value> 
405 <LBK,[> 
405 <ID,wp> 
405 <SPLUS,++> 
405 <RBK,]> 
405 <ASSIGN,=> 
405 <ID,ch> 
405 <SEM,;> 
406 <IF,if> 
406 <LPB,(> 
406 <ID,ch> 
406 <EQ,==> 
406 <CCHAR,'='> 
406 <RPB,)> 
406 <LBS,{> 
407 <ID,tk> 
407 <ASSIGN,=> 
407 <ID,MODAS> 
407 <SEM,;> 
408 <RBS,}> 
408 <ELSE,else> 
408 <LBS,{> 
409 <ID,lex> 
409 <ARROW,->> 
409 <ID,value> 
409 <LBK,[> 
409 <ID,wp> 
409 <SUB,-> 
409 <CDOUBLE,1> 
409 <RBK,]> 
409 <ASSIGN,=> 
409 <CDOUBLE,0> 
409 <SEM,;> 
410 <ID,tk> 
410 <ASSIGN,=> 
410 <ID,MOD> 
410 <SEM,;> 
411 <ID,lex> 
411 <ARROW,->> 
411 <ID,forward> 
411 <ASSIGN,=> 
411 <ID,lex> 
411 <ARROW,->> 
411 <ID,lex_begin> 
411 <SEM,;> 
412 <RBS,}> 
413 <RBS,}> 
413 <ELSE,else> 
413 <IF,if> 
413 <LPB,(> 
413 <ID,ch> 
413 <EQ,==> 
413 <CCHAR,'>'> 
413 <RPB,)> 
413 <LBS,{> 
414 <ID,ch> 
414 <ASSIGN,=> 
414 <STAR,*> 
414 <LPB,(> 
414 <SPLUS,++> 
414 <ID,lex> 
414 <ARROW,->> 
414 <ID,forward> 
414 <RPB,)> 
414 <SEM,;> 
415 <ID,lex> 
415 <ARROW,->> 
415 <ID,value> 
415 <LBK,[> 
415 <ID,wp> 
415 <SPLUS,++> 
415 <RBK,]> 
415 <ASSIGN,=> 
415 <ID,ch> 
415 <SEM,;> 
416 <IF,if> 
416 <LPB,(> 
416 <ID,ch> 
416 <EQ,==> 
416 <CCHAR,'='> 
416 <RPB,)> 
416 <LBS,{> 
417 <ID,tk> 
417 <ASSIGN,=> 
417 <ID,GEQ> 
417 <SEM,;> 
418 <RBS,}> 
418 <ELSE,else> 
418 <IF,if> 
418 <LPB,(> 
418 <ID,ch> 
418 <EQ,==> 
418 <CCHAR,'>'> 
418 <RPB,)> 
418 <LBS,{> 
419 <ID,lex> 
419 <ARROW,->> 
419 <ID,value> 
419 <LBK,[> 
419 <ID,wp> 
419 <SPLUS,++> 
419 <RBK,]> 
419 <ASSIGN,=> 
419 <ID,ch> 
419 <ASSIGN,=> 
419 <STAR,*> 
419 <LPB,(> 
419 <ID,lex> 
419 <ARROW,->> 
419 <ID,forward> 
419 <PLUS,+> 
419 <CDOUBLE,1> 
419 <RPB,)> 
419 <SEM,;> 
420 <IF,if> 
420 <LPB,(> 
420 <ID,ch> 
420 <EQ,==> 
420 <CCHAR,'='> 
420 <RPB,)> 
420 <LBS,{> 
421 <ID,tk> 
421 <ASSIGN,=> 
421 <ID,SRAS> 
421 <SEM,;> 
422 <ID,lex> 
422 <ARROW,->> 
422 <ID,forward> 
422 <SPLUS,++> 
422 <SEM,;> 
423 <RBS,}> 
423 <ELSE,else> 
423 <LBS,{> 
424 <ID,tk> 
424 <ASSIGN,=> 
424 <ID,SR> 
424 <SEM,;> 
425 <RBS,}> 
426 <RBS,}> 
426 <ELSE,else> 
426 <LBS,{> 
427 <ID,lex> 
427 <ARROW,->> 
427 <ID,value> 
427 <LBK,[> 
427 <ID,wp> 
427 <SUB,-> 
427 <CDOUBLE,1> 
427 <RBK,]> 
427 <ASSIGN,=> 
427 <CDOUBLE,0> 
427 <SEM,;> 
428 <ID,tk> 
428 <ASSIGN,=> 
428 <ID,GT> 
428 <SEM,;> 
429 <ID,lex> 
429 <ARROW,->> 
429 <ID,forward> 
429 <ASSIGN,=> 
429 <ID,lex> 
429 <ARROW,->> 
429 <ID,lex_begin> 
429 <SEM,;> 
430 <RBS,}> 
431 <RBS,}> 
431 <ELSE,else> 
431 <IF,if> 
431 <LPB,(> 
431 <ID,ch> 
431 <EQ,==> 
431 <CCHAR,'<'> 
431 <RPB,)> 
431 <LBS,{> 
432 <ID,ch> 
432 <ASSIGN,=> 
432 <STAR,*> 
432 <LPB,(> 
432 <SPLUS,++> 
432 <ID,lex> 
432 <ARROW,->> 
432 <ID,forward> 
432 <RPB,)> 
432 <SEM,;> 
433 <ID,lex> 
433 <ARROW,->> 
433 <ID,value> 
433 <LBK,[> 
433 <ID,wp> 
433 <SPLUS,++> 
433 <RBK,]> 
433 <ASSIGN,=> 
433 <ID,ch> 
433 <SEM,;> 
434 <IF,if> 
434 <LPB,(> 
434 <ID,ch> 
434 <EQ,==> 
434 <CCHAR,'='> 
434 <RPB,)> 
434 <LBS,{> 
435 <ID,tk> 
435 <ASSIGN,=> 
435 <ID,LEQ> 
435 <SEM,;> 
436 <RBS,}> 
436 <ELSE,else> 
436 <IF,if> 
436 <LPB,(> 
436 <ID,ch> 
436 <EQ,==> 
436 <CCHAR,'<'> 
436 <RPB,)> 
436 <LBS,{> 
437 <ID,lex> 
437 <ARROW,->> 
437 <ID,value> 
437 <LBK,[> 
437 <ID,wp> 
437 <SPLUS,++> 
437 <RBK,]> 
437 <ASSIGN,=> 
437 <ID,ch> 
437 <ASSIGN,=> 
437 <STAR,*> 
437 <LPB,(> 
437 <ID,lex> 
437 <ARROW,->> 
437 <ID,forward> 
437 <PLUS,+> 
437 <CDOUBLE,1> 
437 <RPB,)> 
437 <SEM,;> 
438 <IF,if> 
438 <LPB,(> 
438 <ID,ch> 
438 <EQ,==> 
438 <CCHAR,'='> 
438 <RPB,)> 
438 <LBS,{> 
439 <ID,tk> 
439 <ASSIGN,=> 
439 <ID,SLAS> 
439 <SEM,;> 
440 <ID,lex> 
440 <ARROW,->> 
440 <ID,forward> 
440 <SPLUS,++> 
440 <SEM,;> 
441 <RBS,}> 
441 <ELSE,else> 
441 <LBS,{> 
442 <ID,tk> 
442 <ASSIGN,=> 
442 <ID,SL> 
442 <SEM,;> 
443 <RBS,}> 
444 <RBS,}> 
444 <ELSE,else> 
444 <LBS,{> 
445 <ID,tk> 
445 <ASSIGN,=> 
445 <ID,LT> 
445 <SEM,;> 
446 <ID,lex> 
446 <ARROW,->> 
446 <ID,value> 
446 <LBK,[> 
446 <ID,wp> 
446 <SUB,-> 
446 <CDOUBLE,1> 
446 <RBK,]> 
446 <ASSIGN,=> 
446 <CDOUBLE,0> 
446 <SEM,;> 
447 <ID,lex> 
447 <ARROW,->> 
447 <ID,forward> 
447 <ASSIGN,=> 
447 <ID,lex> 
447 <ARROW,->> 
447 <ID,lex_begin> 
447 <SEM,;> 
448 <RBS,}> 
449 <RBS,}> 
449 <ELSE,else> 
449 <IF,if> 
449 <LPB,(> 
449 <ID,ch> 
449 <EQ,==> 
449 <CCHAR,'/'> 
449 <RPB,)> 
449 <LBS,{> 
450 <ID,ch> 
450 <ASSIGN,=> 
450 <STAR,*> 
450 <LPB,(> 
450 <SPLUS,++> 
450 <ID,lex> 
450 <ARROW,->> 
450 <ID,forward> 
450 <RPB,)> 
450 <SEM,;> 
452 <IF,if> 
452 <LPB,(> 
452 <ID,ch> 
452 <EQ,==> 
452 <CCHAR,'/'> 
452 <RPB,)> 
452 <LBS,{> 
453 <WHILE,while> 
453 <LPB,(> 
453 <STAR,*> 
453 <ID,lex> 
453 <ARROW,->> 
453 <ID,forward> 
453 <NEQ,!=> 
453 <CCHAR,'\n'> 
453 <RPB,)> 
453 <LBS,{> 
454 <IF,if> 
454 <LPB,(> 
454 <ID,ch> 
454 <EQ,==> 
454 <ID,LEX_WHATCHER> 
454 <RPB,)> 
454 <LBS,{> 
455 <ID,lex_test> 
455 <LPB,(> 
455 <ID,lex> 
455 <RPB,)> 
455 <SEM,;> 
456 <IF,if> 
456 <LPB,(> 
456 <ID,lex> 
456 <ARROW,->> 
456 <ID,finish> 
456 <RPB,)> 
456 <LBS,{> 
457 <ID,tk> 
457 <ASSIGN,=> 
457 <ID,END> 
457 <SEM,;> 
458 <BREAK,break> 
458 <SEM,;> 
459 <RBS,}> 
460 <RBS,}> 
461 <ID,lex> 
461 <ARROW,->> 
461 <ID,forward> 
461 <SPLUS,++> 
461 <SEM,;> 
462 <RBS,}> 
463 <RETURN,return> 
463 <ID,lex_next_token> 
463 <LPB,(> 
463 <ID,lex> 
463 <RPB,)> 
463 <SEM,;> 
464 <RBS,}> 
464 <ELSE,else> 
464 <IF,if> 
464 <LPB,(> 
464 <ID,ch> 
464 <EQ,==> 
464 <CCHAR,'='> 
464 <RPB,)> 
464 <LBS,{> 
465 <ID,tk> 
465 <ASSIGN,=> 
465 <ID,DAS> 
465 <SEM,;> 
466 <ID,lex> 
466 <ARROW,->> 
466 <ID,value> 
466 <LBK,[> 
466 <ID,wp> 
466 <SPLUS,++> 
466 <RBK,]> 
466 <ASSIGN,=> 
466 <ID,ch> 
466 <SEM,;> 
467 <RBS,}> 
467 <ELSE,else> 
467 <IF,if> 
467 <LPB,(> 
467 <ID,ch> 
467 <EQ,==> 
467 <CCHAR,'*'> 
467 <RPB,)> 
467 <LBS,{> 
468 <ID,ch> 
468 <ASSIGN,=> 
468 <STAR,*> 
468 <LPB,(> 
468 <SPLUS,++> 
468 <ID,lex> 
468 <ARROW,->> 
468 <ID,forward> 
468 <RPB,)> 
468 <SEM,;> 
469 <WHILE,while> 
469 <LPB,(> 
469 <ID,ch> 
469 <NEQ,!=> 
469 <CCHAR,'*'> 
469 <OR,||> 
469 <STAR,*> 
469 <LPB,(> 
469 <ID,lex> 
469 <ARROW,->> 
469 <ID,forward> 
469 <PLUS,+> 
469 <CDOUBLE,1> 
469 <RPB,)> 
469 <NEQ,!=> 
469 <CCHAR,'/'> 
469 <RPB,)> 
469 <LBS,{> 
470 <IF,if> 
470 <LPB,(> 
470 <ID,ch> 
470 <EQ,==> 
470 <CCHAR,'\n'> 
470 <RPB,)> 
470 <ID,lex> 
470 <ARROW,->> 
470 <ID,line> 
470 <SPLUS,++> 
470 <SEM,;> 
471 <ID,ch> 
471 <ASSIGN,=> 
471 <STAR,*> 
471 <LPB,(> 
471 <SPLUS,++> 
471 <ID,lex> 
471 <ARROW,->> 
471 <ID,forward> 
471 <RPB,)> 
471 <SEM,;> 
472 <IF,if> 
472 <LPB,(> 
472 <ID,ch> 
472 <EQ,==> 
472 <ID,LEX_WHATCHER> 
472 <RPB,)> 
472 <LBS,{> 
473 <ID,lex_test> 
473 <LPB,(> 
473 <ID,lex> 
473 <RPB,)> 
473 <SEM,;> 
474 <IF,if> 
474 <LPB,(> 
474 <ID,lex> 
474 <ARROW,->> 
474 <ID,finish> 
474 <RPB,)> 
474 <LBS,{> 
475 <ID,tk> 
475 <ASSIGN,=> 
475 <ID,END> 
475 <SEM,;> 
476 <BREAK,break> 
476 <SEM,;> 
477 <RBS,}> 
478 <RBS,}> 
479 <RBS,}> 
480 <ID,lex> 
480 <ARROW,->> 
480 <ID,forward> 
480 <PAS,+=> 
480 <CDOUBLE,2> 
480 <SEM,;> 
481 <RETURN,return> 
481 <ID,lex_next_token> 
481 <LPB,(> 
481 <ID,lex> 
481 <RPB,)> 
481 <SEM,;> 
482 <RBS,}> 
482 <ELSE,else> 
482 <LBS,{> 
483 <ID,tk> 
483 <ASSIGN,=> 
483 <ID,DIV> 
483 <SEM,;> 
484 <ID,lex> 
484 <ARROW,->> 
484 <ID,forward> 
484 <ASSIGN,=> 
484 <ID,lex> 
484 <ARROW,->> 
484 <ID,lex_begin> 
484 <SEM,;> 
485 <RBS,}> 
486 <RBS,}> 
486 <ELSE,else> 
486 <IF,if> 
486 <LPB,(> 
486 <ID,is_digit> 
486 <LPB,(> 
486 <ID,ch> 
486 <RPB,)> 
486 <RPB,)> 
486 <LBS,{> 
487 <INT,int> 
487 <ID,point> 
487 <ASSIGN,=> 
487 <CDOUBLE,1> 
487 <SEM,;> 
488 <ID,wp> 
488 <SSUB,--> 
488 <SEM,;> 
489 <WHILE,while> 
489 <LPB,(> 
489 <ID,is_digit> 
489 <LPB,(> 
489 <ID,ch> 
489 <RPB,)> 
489 <OR,||> 
489 <ID,ch> 
489 <EQ,==> 
489 <CCHAR,'.'> 
489 <RPB,)> 
489 <LBS,{> 
490 <ID,lex> 
490 <ARROW,->> 
490 <ID,value> 
490 <LBK,[> 
490 <ID,wp> 
490 <SPLUS,++> 
490 <RBK,]> 
490 <ASSIGN,=> 
490 <ID,ch> 
490 <SEM,;> 
491 <IF,if> 
491 <LPB,(> 
491 <ID,ch> 
491 <EQ,==> 
491 <CCHAR,'.'> 
491 <RPB,)> 
491 <ID,point> 
491 <SPLUS,++> 
491 <SEM,;> 
492 <ID,ch> 
492 <ASSIGN,=> 
492 <STAR,*> 
492 <LPB,(> 
492 <SPLUS,++> 
492 <ID,lex> 
492 <ARROW,->> 
492 <ID,forward> 
492 <RPB,)> 
492 <SEM,;> 
493 <IF,if> 
493 <LPB,(> 
493 <ID,ch> 
493 <EQ,==> 
493 <ID,LEX_WHATCHER> 
493 <RPB,)> 
493 <LBS,{> 
494 <ID,lex_test> 
494 <LPB,(> 
494 <ID,lex> 
494 <RPB,)> 
494 <SEM,;> 
495 <IF,if> 
495 <LPB,(> 
495 <ID,lex> 
495 <ARROW,->> 
495 <ID,finish> 
495 <RPB,)> 
495 <LBS,{> 
496 <ID,tk> 
496 <ASSIGN,=> 
496 <ID,END> 
496 <SEM,;> 
497 <BREAK,break> 
497 <SEM,;> 
498 <RBS,}> 
499 <RBS,}> 
500 <RBS,}> 
501 <IF,if> 
501 <LPB,(> 
501 <ID,point> 
501 <GT,>> 
501 <CDOUBLE,1> 
501 <RPB,)> 
501 <ID,printf> 
501 <LPB,(> 
501 <CSTRING,"error: too much '.' in a floating number\n"> 
501 <RPB,)> 
501 <SEM,;> 
502 <ID,tk> 
502 <ASSIGN,=> 
502 <ID,point> 
502 <EQ,==> 
502 <CDOUBLE,0> 
502 <UNKNOW,?> 
502 <ID,CINT> 
502 <COL,:> 
502 <ID,CDOUBLE> 
502 <SEM,;> 
503 <SSUB,--> 
503 <ID,lex> 
503 <ARROW,->> 
503 <ID,forward> 
503 <SEM,;> 
504 <RBS,}> 
504 <ELSE,else> 
504 <IF,if> 
504 <LPB,(> 
504 <ID,ch> 
504 <EQ,==> 
504 <CCHAR,'\''> 
504 <RPB,)> 
504 <LBS,{> 
505 <ID,tk> 
505 <ASSIGN,=> 
505 <ID,CCHAR> 
505 <SEM,;> 
506 <ID,ch> 
506 <ASSIGN,=> 
506 <STAR,*> 
506 <LPB,(> 
506 <SPLUS,++> 
506 <ID,le> 
506 <ID,x> 
506 <ARROW,->> 
506 <ID,forward> 
506 <RPB,)> 
506 <SEM,;> 
507 <WHILE,while> 
507 <LPB,(> 
507 <ID,ch> 
507 <NEQ,!=> 
507 <CCHAR,'\''> 
507 <OR,||> 
507 <LPB,(> 
507 <ID,lex> 
507 <ARROW,->> 
507 <ID,value> 
507 <LBK,[> 
507 <ID,wp> 
507 <SUB,-> 
507 <CDOUBLE,1> 
507 <RBK,]> 
507 <EQ,==> 
507 <CCHAR,'\\'> 
507 <AND,&&> 
507 <ID,lex> 
507 <ARROW,->> 
507 <ID,value> 
507 <LBK,[> 
507 <ID,wp> 
507 <SUB,-> 
507 <CDOUBLE,2> 
507 <RBK,]> 
507 <NEQ,!=> 
507 <CCHAR,'\\'> 
507 <RPB,)> 
507 <RPB,)> 
507 <LBS,{> 
508 <ID,lex> 
508 <ARROW,->> 
508 <ID,value> 
508 <LBK,[> 
508 <ID,wp> 
508 <SPLUS,++> 
508 <RBK,]> 
508 <ASSIGN,=> 
508 <ID,ch> 
508 <SEM,;> 
509 <ID,ch> 
509 <ASSIGN,=> 
509 <STAR,*> 
509 <LPB,(> 
509 <SPLUS,++> 
509 <ID,lex> 
509 <ARROW,->> 
509 <ID,forward> 
509 <RPB,)> 
509 <SEM,;> 
510 <IF,if> 
510 <LPB,(> 
510 <ID,ch> 
510 <EQ,==> 
510 <ID,LEX_WHATCHER> 
510 <RPB,)> 
510 <LBS,{> 
511 <ID,lex_test> 
511 <LPB,(> 
511 <ID,lex> 
511 <RPB,)> 
511 <SEM,;> 
512 <IF,if> 
512 <LPB,(> 
512 <ID,lex> 
512 <ARROW,->> 
512 <ID,finish> 
512 <RPB,)> 
512 <LBS,{> 
513 <ID,tk> 
513 <ASSIGN,=> 
513 <ID,END> 
513 <SEM,;> 
514 <BREAK,break> 
514 <SEM,;> 
515 <RBS,}> 
516 <RBS,}> 
517 <RBS,}> 
518 <ID,lex> 
518 <ARROW,->> 
518 <ID,value> 
518 <LBK,[> 
518 <ID,wp> 
518 <SPLUS,++> 
518 <RBK,]> 
518 <ASSIGN,=> 
518 <ID,ch> 
518 <SEM,;> 
520 <RBS,}> 
520 <ELSE,else> 
520 <IF,if> 
520 <LPB,(> 
520 <ID,ch> 
520 <EQ,==> 
520 <CCHAR,'\"'> 
520 <RPB,)> 
520 <LBS,{> 
521 <ID,tk> 
521 <ASSIGN,=> 
521 <ID,CSTRING> 
521 <SEM,;> 
522 <ID,ch> 
522 <ASSIGN,=> 
522 <STAR,*> 
522 <LPB,(> 
522 <SPLUS,++> 
522 <ID,lex> 
522 <ARROW,->> 
522 <ID,forward> 
522 <RPB,)> 
522 <SEM,;> 
523 <WHILE,while> 
523 <LPB,(> 
523 <ID,ch> 
523 <NEQ,!=> 
523 <CCHAR,'\"'> 
523 <OR,||> 
523 <LPB,(> 
523 <ID,lex> 
523 <ARROW,->> 
523 <ID,value> 
523 <LBK,[> 
523 <ID,wp> 
523 <SUB,-> 
523 <CDOUBLE,1> 
523 <RBK,]> 
523 <EQ,==> 
523 <CCHAR,'\\'> 
523 <AND,&&> 
523 <ID,lex> 
523 <ARROW,->> 
523 <ID,value> 
523 <LBK,[> 
523 <ID,wp> 
523 <SUB,-> 
523 <CDOUBLE,2> 
523 <RBK,]> 
523 <NEQ,!=> 
523 <CCHAR,'\\'> 
523 <RPB,)> 
523 <RPB,)> 
523 <LBS,{> 
524 <ID,lex> 
524 <ARROW,->> 
524 <ID,value> 
524 <LBK,[> 
524 <ID,wp> 
524 <SPLUS,++> 
524 <RBK,]> 
524 <ASSIGN,=> 
524 <ID,ch> 
524 <SEM,;> 
525 <ID,ch> 
525 <ASSIGN,=> 
525 <STAR,*> 
525 <LPB,(> 
525 <SPLUS,++> 
525 <ID,lex> 
525 <ARROW,->> 
525 <ID,forward> 
525 <RPB,)> 
525 <SEM,;> 
526 <IF,if> 
526 <LPB,(> 
526 <ID,ch> 
526 <EQ,==> 
526 <ID,LEX_WHATCHER> 
526 <RPB,)> 
526 <LBS,{> 
527 <ID,lex_test> 
527 <LPB,(> 
527 <ID,lex> 
527 <RPB,)> 
527 <SEM,;> 
528 <IF,if> 
528 <LPB,(> 
528 <ID,lex> 
528 <ARROW,->> 
528 <ID,finish> 
528 <RPB,)> 
528 <LBS,{> 
529 <ID,tk> 
529 <ASSIGN,=> 
529 <ID,END> 
529 <SEM,;> 
530 <BREAK,break> 
530 <SEM,;> 
531 <RBS,}> 
532 <RBS,}> 
533 <RBS,}> 
534 <ID,lex> 
534 <ARROW,->> 
534 <ID,value> 
534 <LBK,[> 
534 <ID,wp> 
534 <SPLUS,++> 
534 <RBK,]> 
534 <ASSIGN,=> 
534 <ID,ch> 
534 <SEM,;> 
536 <RBS,}> 
536 <ELSE,else> 
536 <IF,if> 
536 <LPB,(> 
536 <ID,is_alpha> 
536 <LPB,(> 
536 <ID,ch> 
536 <RPB,)> 
536 <OR,||> 
536 <ID,ch> 
536 <EQ,==> 
536 <CCHAR,'_'> 
536 <RPB,)> 
536 <LBS,{> 
537 <ID,wp> 
537 <SSUB,--> 
537 <SEM,;> 
538 <WHILE,while> 
538 <LPB,(> 
538 <ID,is_alpha> 
538 <LPB,(> 
538 <ID,ch> 
538 <RPB,)> 
538 <OR,||> 
538 <ID,is_digit> 
538 <LPB,(> 
538 <ID,ch> 
538 <RPB,)> 
538 <OR,||> 
538 <ID,ch> 
538 <EQ,==> 
538 <CCHAR,'_'> 
538 <RPB,)> 
538 <LBS,{> 
539 <ID,lex> 
539 <ARROW,->> 
539 <ID,value> 
539 <LBK,[> 
539 <ID,wp> 
539 <SPLUS,++> 
539 <RBK,]> 
539 <ASSIGN,=> 
539 <ID,ch> 
539 <SEM,;> 
540 <ID,ch> 
540 <ASSIGN,=> 
540 <STAR,*> 
540 <LPB,(> 
540 <SPLUS,++> 
540 <ID,lex> 
540 <ARROW,->> 
540 <ID,forward> 
540 <RPB,)> 
540 <SEM,;> 
541 <IF,if> 
541 <LPB,(> 
541 <ID,ch> 
541 <EQ,==> 
541 <ID,LEX_WHATCHER> 
541 <RPB,)> 
541 <LBS,{> 
542 <ID,lex_test> 
542 <LPB,(> 
542 <ID,lex> 
542 <RPB,)> 
542 <SEM,;> 
543 <IF,if> 
543 <LPB,(> 
543 <ID,lex> 
543 <ARROW,->> 
543 <ID,finish> 
543 <RPB,)> 
543 <LBS,{> 
544 <ID,tk> 
544 <ASSIGN,=> 
544 <ID,END> 
544 <SEM,;> 
545 <BREAK,break> 
545 <SEM,;> 
546 <RBS,}> 
547 <RBS,}> 
548 <RBS,}> 
549 <ID,lex> 
549 <ARROW,->> 
549 <ID,value> 
549 <LBK,[> 
549 <ID,wp> 
549 <RBK,]> 
549 <ASSIGN,=> 
549 <CDOUBLE,0> 
549 <SEM,;> 
550 <ID,tk> 
550 <ASSIGN,=> 
550 <ID,lex_keyword> 
550 <LPB,(> 
550 <ID,lex> 
550 <RPB,)> 
550 <SEM,;> 
551 <SSUB,--> 
551 <ID,lex> 
551 <ARROW,->> 
551 <ID,forward> 
551 <SEM,;> 
552 <RBS,}> 
552 <ELSE,else> 
552 <LBS,{> 
553 <ID,tk> 
553 <ASSIGN,=> 
553 <ID,UNKNOW> 
553 <SEM,;> 
554 <RBS,}> 
555 <ID,lex> 
555 <ARROW,->> 
555 <ID,value> 
555 <LBK,[> 
555 <ID,wp> 
555 <RBK,]> 
555 <ASSIGN,=> 
555 <CDOUBLE,0> 
555 <SEM,;> 
556 <ID,lex> 
556 <ARROW,->> 
556 <ID,forward> 
556 <SPLUS,++> 
556 <SEM,;> 
558 <RETURN,return> 
558 <ID,tk> 
558 <SEM,;> 
559 <RBS,}> 
561 <VOID,void> 
561 <ID,lex_free> 
561 <LPB,(> 
561 <ID,Lex> 
561 <STAR,*> 
561 <ID,lex> 
561 <RPB,)> 
562 <LBS,{> 
563 <IF,if> 
563 <LPB,(> 
563 <ID,lex> 
563 <RPB,)> 
563 <LBS,{> 
564 <ID,free> 
564 <LPB,(> 
564 <ID,lex> 
564 <ARROW,->> 
564 <ID,buff_alpha> 
564 <RPB,)> 
564 <SEM,;> 
565 <ID,free> 
565 <LPB,(> 
565 <ID,lex> 
565 <ARROW,->> 
565 <ID,buff_beta> 
565 <RPB,)> 
565 <SEM,;> 
566 <ID,fclose> 
566 <LPB,(> 
566 <ID,lex> 
566 <ARROW,->> 
566 <ID,source_file> 
566 <RPB,)> 
566 <SEM,;> 
567 <RBS,}> 
568 <RBS,}> 
570 <INT,int> 
570 <ID,main> 
570 <LPB,(> 
570 <INT,int> 
570 <ID,argc> 
570 <COM,,> 
570 <CHAR,char> 
570 <STAR,*> 
570 <STAR,*> 
570 <ID,argv> 
570 <RPB,)> 
571 <LBS,{> 
573 <ID,Lex> 
573 <ID,lex> 
573 <SEM,;> 
574 <ID,lex> 
574 <DOT,.> 
574 <ID,buff_size> 
574 <ASSIGN,=> 
574 <CDOUBLE,1024> 
574 <SEM,;> 
575 <ID,lex_init> 
575 <LPB,(> 
575 <BAND,&> 
575 <ID,lex> 
575 <COM,,> 
575 <ID,argv> 
575 <LBK,[> 
575 <CDOUBLE,1> 
575 <RBK,]> 
575 <RPB,)> 
575 <SEM,;> 
576 <INT,int> 
576 <ID,line> 
576 <ASSIGN,=> 
576 <ID,lex> 
576 <DOT,.> 
576 <ID,line> 
576 <SEM,;> 
577 <UNKNOW,#> 
577 <ID,ifdef> 
577 <ID,SOURCE> 
578 <ID,printf> 
578 <LPB,(> 
578 <CSTRING,"1 "> 
578 <RPB,)> 
578 <SEM,;> 
579 <WHILE,while> 
579 <LPB,(> 
579 <NOT,!> 
579 <ID,lex> 
579 <DOT,.> 
579 <ID,finish> 
579 <RPB,)> 
579 <LBS,{> 
580 <ENUM,enum> 
580 <ID,Token> 
580 <ID,tk> 
580 <ASSIGN,=> 
580 <ID,lex_next_token> 
580 <LPB,(> 
580 <BAND,&> 
580 <ID,lex> 
580 <RPB,)> 
580 <SEM,;> 
581 <IF,if> 
581 <LPB,(> 
581 <ID,tk> 
581 <EQ,==> 
581 <ID,END> 
581 <RPB,)> 
581 <BREAK,break> 
581 <SEM,;> 
582 <FOR,for> 
582 <LPB,(> 
582 <INT,int> 
582 <ID,i> 
582 <ASSIGN,=> 
582 <ID,line> 
582 <SEM,;> 
582 <ID,i> 
582 <LT,<> 
582 <ID,lex> 
582 <DOT,.> 
582 <ID,line> 
582 <SEM,;> 
582 <ID,i> 
582 <SPLUS,++> 
582 <RPB,)> 
582 <LBS,{> 
583 <ID,printf> 
583 <LPB,(> 
583 <CSTRING,"\n%d "> 
583 <COM,,> 
583 <ID,i> 
583 <PLUS,+> 
583 <CDOUBLE,1> 
583 <RPB,)> 
583 <SEM,;> 
584 <RBS,}> 
585 <ID,printf> 
585 <LPB,(> 
585 <CSTRING,"%s "> 
585 <COM,,> 
585 <ID,lex> 
585 <DOT,.> 
585 <ID,value> 
585 <RPB,)> 
585 <SEM,;> 
586 <ID,line> 
586 <ASSIGN,=> 
586 <ID,lex> 
586 <DOT,.> 
586 <ID,line> 
586 <SEM,;> 
587 <RBS,}> 
588 <UNKNOW,#> 
588 <ELSE,else> 
589 <WHILE,while> 
589 <LPB,(> 
589 <NOT,!> 
589 <ID,lex> 
589 <DOT,.> 
589 <ID,finish> 
589 <RPB,)> 
589 <LBS,{> 
590 <ENUM,enum> 
590 <ID,Token> 
590 <ID,tk> 
590 <ASSIGN,=> 
590 <ID,lex_next_token> 
590 <LPB,(> 
590 <BAND,&> 
590 <ID,lex> 
590 <RPB,)> 
590 <SEM,;> 
591 <IF,if> 
591 <LPB,(> 
591 <ID,tk> 
591 <EQ,==> 
591 <ID,END> 
591 <RPB,)> 
591 <BREAK,break> 
591 <SEM,;> 
592 <ID,printf> 
592 <LPB,(> 
592 <CSTRING,"%d <%s,%s> \n"> 
592 <COM,,> 
592 <ID,lex> 
592 <DOT,.> 
592 <ID,line> 
592 <COM,,> 
592 <ID,msg> 
592 <LBK,[> 
592 <ID,tk> 
592 <RBK,]> 
592 <COM,,> 
592 <ID,lex> 
592 <DOT,.> 
592 <ID,value> 
592 <RPB,)> 
592 <SEM,;> 
593 <ID,line> 
593 <ASSIGN,=> 
593 <ID,lex> 
593 <DOT,.> 
593 <ID,line> 
593 <SEM,;> 
594 <RBS,}> 
595 <UNKNOW,#> 
595 <ID,endif> 
596 <ID,lex_free> 
596 <LPB,(> 
596 <BAND,&> 
596 <ID,lex> 
596 <RPB,)> 
596 <SEM,;> 
597 <RBS,}> 
